//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineLearningSystem.Report
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class OnlineLearningSystemEntities : DbContext
    {
        public OnlineLearningSystemEntities()
            : base("name=OnlineLearningSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<assignmentresponse> assignmentresponses { get; set; }
        public DbSet<assignment> assignments { get; set; }
        public DbSet<assignmentsStudentList> assignmentsStudentLists { get; set; }
        public DbSet<message> messages { get; set; }
        public DbSet<review> reviews { get; set; }
        public DbSet<school> schools { get; set; }
        public DbSet<schooladmin> schooladmins { get; set; }
        public DbSet<student_assignment> student_assignment { get; set; }
        public DbSet<student_info> student_info { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<teacher_info> teacher_info { get; set; }
        public DbSet<user_info> user_info { get; set; }
    
        public virtual ObjectResult<Nullable<int>> IDU_Assignment(string action, string name, string resources, Nullable<System.DateTime> enddate, Nullable<System.DateTime> startdate, Nullable<int> teacherid, Nullable<int> schoolid, string question1, string question2, string question3, string question4, string question5, string description)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var resourcesParameter = resources != null ?
                new ObjectParameter("resources", resources) :
                new ObjectParameter("resources", typeof(string));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("teacherid", teacherid) :
                new ObjectParameter("teacherid", typeof(int));
    
            var schoolidParameter = schoolid.HasValue ?
                new ObjectParameter("schoolid", schoolid) :
                new ObjectParameter("schoolid", typeof(int));
    
            var question1Parameter = question1 != null ?
                new ObjectParameter("question1", question1) :
                new ObjectParameter("question1", typeof(string));
    
            var question2Parameter = question2 != null ?
                new ObjectParameter("question2", question2) :
                new ObjectParameter("question2", typeof(string));
    
            var question3Parameter = question3 != null ?
                new ObjectParameter("question3", question3) :
                new ObjectParameter("question3", typeof(string));
    
            var question4Parameter = question4 != null ?
                new ObjectParameter("question4", question4) :
                new ObjectParameter("question4", typeof(string));
    
            var question5Parameter = question5 != null ?
                new ObjectParameter("question5", question5) :
                new ObjectParameter("question5", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IDU_Assignment", actionParameter, nameParameter, resourcesParameter, enddateParameter, startdateParameter, teacheridParameter, schoolidParameter, question1Parameter, question2Parameter, question3Parameter, question4Parameter, question5Parameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IDU_Message(string action, string sender, Nullable<int> receiver, string subject, string body, Nullable<System.DateTime> sentdate, string usertype, Nullable<int> schoolid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var senderParameter = sender != null ?
                new ObjectParameter("sender", sender) :
                new ObjectParameter("sender", typeof(string));
    
            var receiverParameter = receiver.HasValue ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var sentdateParameter = sentdate.HasValue ?
                new ObjectParameter("sentdate", sentdate) :
                new ObjectParameter("sentdate", typeof(System.DateTime));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var schoolidParameter = schoolid.HasValue ?
                new ObjectParameter("schoolid", schoolid) :
                new ObjectParameter("schoolid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IDU_Message", actionParameter, senderParameter, receiverParameter, subjectParameter, bodyParameter, sentdateParameter, usertypeParameter, schoolidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IDU_School(string action, string schoolname, string location, Nullable<int> contact)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schoolnameParameter = schoolname != null ?
                new ObjectParameter("schoolname", schoolname) :
                new ObjectParameter("schoolname", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var contactParameter = contact.HasValue ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IDU_School", actionParameter, schoolnameParameter, locationParameter, contactParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> IUD(string action, string firstname, Nullable<int> lastname, Nullable<int> roll)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname.HasValue ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(int));
    
            var rollParameter = roll.HasValue ?
                new ObjectParameter("roll", roll) :
                new ObjectParameter("roll", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("IUD", actionParameter, firstnameParameter, lastnameParameter, rollParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IUD_Teacher(string action, string firstname, string lastname, string username, string usertype, string password, Nullable<int> schoolid, Nullable<int> id)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var schoolidParameter = schoolid.HasValue ?
                new ObjectParameter("schoolid", schoolid) :
                new ObjectParameter("schoolid", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IUD_Teacher", actionParameter, firstnameParameter, lastnameParameter, usernameParameter, usertypeParameter, passwordParameter, schoolidParameter, idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
